#include "tm4c123gh6pm.h"
#include <stdlib.h>
#include <math.h>
#define pi 3.14159265358979323846
#include <stdio.h>
#include <inttypes.h>
#include <string.h>

void sw1_greenled_init(void);//function to initialize port F
void greenled_on(void);//function to turn the green LED on when distance is>100
double distance(double lat1, double lon1, double lat2, double lon2, char unit);//calculate the distance by knowing the lon&lat of both points
double deg2rad(double deg);
double rad2deg(double rad);
double distancee ;


int main(void){
sw1_greenled_init();
greenled_on();

}


void sw1_greenled_init(void){
SYSCTL_RCGCGPIO_R |= 0x20; /* enable clock to GPIOF */
GPIO_PORTF_DIR_R = 0x08; /* set PORTF3 pin as output (LED) pin */
GPIO_PORTF_DEN_R = 0x18; /* set PORTF pins 4-3 as digital pins */
GPIO_PORTF_PUR_R = 0x10; /* enable pull up for pin 4 */
}

void greenled_on(void){
if(distancee>100){
while(1){
GPIO_PORTF_DATA_R = 0x08;}
}}

double distance(double lat1, double lon1, double lat2, double lon2, char unit) {
  double theta, dist;
  if ((lat1 == lat2) && (lon1 == lon2)) {
    return 0;
  }
  else {
    theta = lon1 - lon2;
    dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1)) * cos(deg2rad(lat2)) * cos(deg2rad(theta));
    dist = acos(dist);
    dist = rad2deg(dist);
    dist = dist * 60 * 1.1515;
    switch(unit) {
      case 'M':
        break;
      case 'm'://to get distance in meter
        dist = dist * 1.609344*1000;
        break;
      case 'N':
        dist = dist * 0.8684;
        break;
    }
    return (dist);
  }
}



double deg2rad(double deg) {
  return (deg * pi / 180);
}


double rad2deg(double rad) {
  return (rad * 180 / pi);
}
